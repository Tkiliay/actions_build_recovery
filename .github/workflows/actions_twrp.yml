name: rec-building-twrp

on:
  watch:
    types: [started]
  workflow_dispatch:
   inputs:
     twrp_url:
       description: 'twrp_url'
       required: true
       default: 'https://github.com/minimal-manifest-twrp/platform_manifest_twrp_omni'
     twrp_branch:
       description: 'twrp_branch'
       required: true
       default: 'twrp-9.0'
     device_code:
       description: 'device_code'
       required: true
       default: 'tiffany'
     dt_url:
       description: 'dt_url'
       required: true
       default: 'laityts/android_device_xiaomi_tiffany-twrp'
     dt_branch:
       description: 'dt_branch'
       required: true
       default: 'android-9.0'
     dt_path:
       description: 'dt_path'
       required: true
       default: 'device/xiaomi/tiffany'
     lunch:
       description: 'lunch(omni,twrp)'
       required: true
       default: 'omni'
     mka:
       description: 'mka(recoveryimage,bootimage)'
       required: true
       default: 'recoveryimage'
     twrp_remote:
       description: 'twrp_remote'
       required: true
       default: 'false'

jobs:
  build:
    if: github.event.repository.owner.id == github.event.sender.id
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v3
              
    - name: Initial
      run: |
        sudo apt-get update -y
        sudo apt-get install -y git-core gnupg flex bison gperf build-essential zip curl zlib1g-dev gcc-multilib g++-multilib libc6-dev-i386 lib32ncurses5-dev x11proto-core-dev libx11-dev tree lib32z-dev libgl1-mesa-dev libxml2-utils xsltproc unzip jq python2
      
    - name: Get variables
      run: |
        if [[ -z "${{ github.event.inputs.twrp_url }}" ]]; then
            echo "::set-output name=twrp_url::$(jq -r '.twrp_url' config-twrp.json)"
        else
            echo "::set-output name=twrp_url::${{ github.event.inputs.twrp_url }}"
        fi
        if [[ -z "${{ github.event.inputs.twrp_branch }}" ]]; then
            echo "::set-output name=twrp_branch::$(jq -r '.twrp_branch' config-twrp.json)"
        else
            echo "::set-output name=twrp_branch::${{ github.event.inputs.twrp_branch }}"
        fi
        if [[ -z "${{ github.event.inputs.device_code }}" ]]; then
            echo "::set-output name=device_code::$(jq -r '.device_code' config-twrp.json)"
        else
            echo "::set-output name=device_code::${{ github.event.inputs.device_code }}"
        fi
        if [[ -z "${{ github.event.inputs.dt_url }}" ]]; then
            echo "::set-output name=dt_url::$(jq -r '.dt_url' config-twrp.json)"
        else
            echo "::set-output name=dt_url::${{ github.event.inputs.dt_url }}"
        fi
        if [[ -z "${{ github.event.inputs.dt_branch }}" ]]; then
            echo "::set-output name=dt_branch::$(jq -r '.dt_branch' config-twrp.json)"
        else
            echo "::set-output name=dt_branch::${{ github.event.inputs.dt_branch }}"
        fi
        if [[ -z "${{ github.event.inputs.dt_path }}" ]]; then
            echo "::set-output name=dt_path::$(jq -r '.dt_path' config-twrp.json)"
        else
            echo "::set-output name=dt_path::${{ github.event.inputs.dt_path }}"
        fi
        echo "::set-output name=dt_remote::$(jq -r '.dt_remote' config-twrp.json)"
        echo "::set-output name=git_username::$(jq -r '.git_username' config-twrp.json)"
        echo "::set-output name=git_email::$(jq -r '.git_email' config-twrp.json)"
        echo "::set-output name=use_own_dt::$(jq -r '.use_own_dt' config-twrp.json)"
        echo "::set-output name=date::$(date +%F)"
        echo "::set-output name=day::$(date +%Y%m%d)"
      id: var
      
    - name: Install Repo
      run: |
        mkdir ~/bin
        curl https://storage.googleapis.com/git-repo-downloads/repo > ~/bin/repo
        chmod a+x ~/bin/repo

    - name: Initialize a Repo client
      run: |
        PATH=~/bin:$PATH
        mkdir workspace
        cd workspace
        echo "::set-output name=pwd::$(pwd)"
        git config --global user.name "${{ steps.var.outputs.git_username }}"
        git config --global user.email "${{ steps.var.outputs.git_email }}"
        repo init --depth=1 -u ${{ steps.var.outputs.twrp_url }} -b ${{ steps.var.outputs.twrp_branch }}
        mkdir .repo/local_manifests
      id: pwd

    - name: Clone your own device tree
      if: steps.var.outputs.use_own_dt == 'true'
      run: |
        sed -i 's!dt_url!${{ steps.var.outputs.dt_url }}!g' device.xml
        sed -i 's!dt_path!${{ steps.var.outputs.dt_path }}!g' device.xml
        sed -i 's!dt_remote!${{ steps.var.outputs.dt_remote }}!g' device.xml
        sed -i 's!dt_branch!${{ steps.var.outputs.dt_branch }}!g' device.xml
        cp device.xml workspace/.repo/local_manifests/ 
          
    - name: Repo sync
      run: |
        PATH=~/bin:$PATH
        cd workspace
        repo sync -c -j$(nproc --all) --force-sync --no-clone-bundle --no-tags
        ls -al

    - name: Clone Twrp recovery
      if: github.event.inputs.twrp_remote == 'true'
      run: |
        PATH=~/bin:$PATH
        cd workspace
        rm -rf bootable/recovery
        git clone --depth=1 -b ${{ steps.var.outputs.dt_branch }} https://github.com/TeamWin/android_bootable_recovery.git bootable/recovery
        ls -al bootable/recovery

    - id: build
      name: Start Building
      run: |
        PATH=~/bin:$PATH
        cd ${{ steps.pwd.outputs.pwd }}
        tree device
        export ALLOW_MISSING_DEPENDENCIES=true
        source build/envsetup.sh
        lunch ${{ github.event.inputs.lunch }}_${{ steps.var.outputs.device_code }}-eng 
        mka ${{ github.event.inputs.mka }} -j$(nproc --all)
        ls -al
        TWRP_VERSION=$(cat bootable/recovery/variables.h | grep TW_MAIN_VERSION_STR | cut -d\" -s -f2)
        echo "TWRP_VERSION: $TWRP_VERSION"
        if [[ "${{ github.event.inputs.mka }}" == "recoveryimage" ]]; then
            mv out/target/product/${{ steps.var.outputs.device_code }}/recovery.img out/target/product/${{ steps.var.outputs.device_code }}/TWRP-${TWRP_VERSION}_${{ steps.var.outputs.device_code }}-${{ steps.var.outputs.day }}.img
        elif [[ "${{ github.event.inputs.mka }}" == "bootimage" ]]; then
            mv out/target/product/${{ steps.var.outputs.device_code }}/boot.img out/target/product/${{ steps.var.outputs.device_code }}/TWRP-${TWRP_VERSION}_${{ steps.var.outputs.device_code }}-${{ steps.var.outputs.day }}.img
        fi
        echo "::set-output name=TWRP_VERSION::${TWRP_VERSION}"
        
    - name: Upload REC
      uses: softprops/action-gh-release@v1
      with:
        files: workspace/out/target/product/${{ steps.var.outputs.device_code }}/TWRP-${{ steps.build.outputs.TWRP_VERSION }}_${{ steps.var.outputs.device_code }}-${{ steps.var.outputs.day }}.img
        name: TWRP ${{ steps.build.outputs.TWRP_VERSION }} ${{ steps.var.outputs.device_code }} ${{ steps.var.outputs.day }}
        tag_name: ${{ github.run_id }}
        body: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}
      env:
        GITHUB_TOKEN: ${{ secrets.TWRP }}
